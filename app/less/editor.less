// CodeMirror
// =========

    .CodeMirror {
        height: 100%;
        position: absolute;
        top:0;
        left: 0;
        right: 0;
        display: block;
        margin: 0 auto;
        border: none;
        font-family: @editor-font-family;
        font-size: @editor-font-size;
        line-height: @editor-line-height;
        background-color: @editor-background-color;
        color: @editor-text-color;
    }

    .CodeMirror-code {
        margin-top: 50px;
    }

    .CodeMirror-sizer {
        width: 90%;
        max-width: 900px;
        margin: 0 auto !important;
    }

// Cursors and selections
// ======================

    .CodeMirror-cursors.CodeMirror-overwrite .CodeMirror-cursor {
        border-left: none !important;
        border-bottom: 1px solid @editor-cursor-color !important;
        width: 1.2ex;
    }

    .CodeMirror-selected, .CodeMirror-focused .CodeMirror-selected {
        background-color: @editor-selection-background;
    }

// Generic editor classes
// ======================

    .cm-header {font-weight: bold;}
    .cm-strong {font-weight: bold;}
    .cm-em {font-style: italic;}
    .cm-link {text-decoration: underline;}
    .cm-strikethrough {text-decoration: line-through;}
    .cm-error {color: @error-color;}
    .cm-invalidchar {color: @error-color;}

// Text
// ====

    .CodeMirror span.cm-m-markdown {
        font-family: @editor-font-family;

        // Header
        &.cm-header {
            color: @editor-header-color;
            font-family: @editor-header-font-family;
        }
        &.cm-header-1 { font-size: @editor-header-1-size; line-height: 100%; }
        &.cm-header-2 { font-size: @editor-header-2-size; }
        &.cm-header-3 { font-size: @editor-header-3-size; }
        &.cm-header-4 { font-size: @editor-header-4-size; }
        &.cm-header-5 { font-size: @editor-header-5-size; }
        &.cm-header-6 { font-size: @editor-header-6-size; }

        // Code
        &.cm-comment {
            font-family: @editor-code-font-family;
            color: @editor-code-color;
        }

        // Quote
        &.cm-quote { color: @editor-quote-color; }

        // Lists (3 levels)
        &.cm-variable-2, &.cm-variable-3, &.cm-keyword {
            color: @editor-list-color;

            &:first-child {
                padding-left: @editor-list-padding-left;
            }

            &+& {
                padding-left: 0
            }
        }

        // Horizontal rule
        &.cm-hr { color: @editor-hr-color; }

        // Image
        &.cm-tag { color: @editor-image-color; }

        // Formatting
        &.cm-formatting { color: @editor-formatting-color; }

        // Link
        &.cm-link { color: @editor-link-color; }

        // Link href
        &.cm-string { color: @editor-link-href-color; }

        // Emphasis
        &.cm-em {}

        // Strong
        &.cm-strong {}

        // Strikethrough
        &.cm-strikethrough {}

    }

    // Underline-style headers fix
    .header-underline .cm-header-1, .header-underline .cm-header-2 { font-size: 100%; }

// Code coloration
// ===============

    .CodeMirror span:not(.cm-m-markdown) {
        font-family: @editor-code-font-family;

        &.cm-atom {color: @cm-atom-color;}
        &.cm-attribute {color: @cm-attribute-color;}
        &.cm-builtin {color: @cm-builtin-color;}
        &.cm-bracket {color: @cm-bracket-color;}
        &.cm-comment {color: @cm-comment-color;}
        &.cm-def {color: @cm-def-color;}
        &.cm-header {color: @cm-header-color;}
        &.cm-hr {color: @cm-hr-color;}
        &.cm-keyword {color: @cm-keyword-color;}
        &.cm-link {color: @cm-link-color;}
        &.cm-meta {color: @cm-meta-color;}
        &.cm-node {color: @cm-node-color;}
        &.cm-number {color: @cm-number-color;}
        &.cm-operator {color: @cm-operator-color;}
        &.cm-property {color: @cm-property-color;}
        &.cm-punctuation {color: @cm-punctuation-color;}
        &.cm-qualifier {color: @cm-qualifier-color;}
        &.cm-quote {color: @cm-quote-color;}
        &.cm-string {color: @cm-string-color;}
        &.cm-string-2 {color: @cm-string-2-color;}
        &.cm-tag {color: @cm-tag-color;}
        &.cm-variable {color: @cm-variable-color;}
        &.cm-variable-2 {color: @cm-variable-2-color;}
        &.cm-variable-3 {color: @cm-variable-3-color;}
        &.cm-negative {color: @cm-negative-color;}
        &.cm-positive {color: @cm-positive-color;}
    }

// Hidden characters
// =================

    // Line breaks
    body.show-hidden-characters .cm-trailing-whitespace { }
    body.show-hidden-characters .cm-trailing-whitespace:last-child:after {
        content: '↵';
        color: @editor-hidden-characters-color;
        font-family: @editor-font-family;
        font-weight: normal;
        font-style: normal;
    }

    // Tabs
    body.show-hidden-characters .cm-tab {}
    body.show-hidden-characters .cm-tab:after {
        content: '⇥';
        color: @editor-hidden-characters-color;
        font-family: @editor-font-family;
        font-weight: normal;
        font-style: normal;
        margin-left: -50%;
    }

// Markers
// =======

    // Image
    .CodeMirror-widget .autopreview-image, .CodeMirror-widget .autopreview-iframe {
        max-width: 100%;
        max-height: 800px;
        cursor: default;
    }

    .CodeMirror-widget .autopreview-iframe {
        overflow: hidden;
        position: relative;
        width: 100%;
        height: 0;
        border: 1px solid #333;
        background: #333 data-uri("image/svg+xml;charset=UTF-8", "./svg/spinner.svg") no-repeat center;
    }

    .CodeMirror-widget .autopreview-iframe webview {
        position: absolute;
        width: 100%;
        height: 100%;
        left: -200%;
        top: 0;
    }

    .CodeMirror-widget .autopreview-iframe.iframe-loaded {
        background: none;
    }

    .CodeMirror-widget .autopreview-iframe.iframe-error {
        background: @error-color data-uri("image/svg+xml;charset=UTF-8", "./svg/chain-broken.svg") no-repeat center;
        color: @error-color-contrast;
        border: 1px solid @error-color;
    }

    .CodeMirror-widget .autopreview-iframe.iframe-loaded webview {
        left: 0;
    }

    // Image not found message
    .CodeMirror-widget span.autopreview-error {
        color: @error-color-contrast;
        background: data-uri("image/svg+xml;charset=UTF-8", "./svg/notification.svg") no-repeat 10px @error-color;
        border-radius: 6px;
        padding: 6px 10px 6px 30px;
        font-family: Arial, sans-serif;
        font-size: 14px;
    }

    // Anchors
    a.anchor {
        display: inline-block;
        width: 24px;
        height: 24px;
        overflow: hidden;
        background: data-uri("image/svg+xml;charset=UTF-8", "./svg/anchor.svg") no-repeat center;
        cursor: default;
    }

    // Mathjax hack
    .CodeMirror-widget div.MathJax_Display {
        margin-top: -1em;
        margin-bottom: -1em;
    }

    // Todolists
    span.todolist {
        width: 20px;
        height: 20px;
        margin-right: 20px;
        display: inline-block;
        vertical-align: text-top;
        background: transparent no-repeat center center;
        background-image: data-uri("image/svg+xml;charset=UTF-8", "./svg/checkbox-unchecked.svg");
        cursor: pointer;
    }

    span.todolist.checked {
        background-image: data-uri("image/svg+xml;charset=UTF-8", "./svg/checkbox-checked.svg");

        .cm-variable-2, .cm-variable-3, .cm-keyword {
            color:  @editor-list-checked-color;
            text-decoration: line-through;
        }
    }

    .cm-checked-list-item {
        text-decoration: line-through;
        color: @editor-list-checked-color;

        &.cm-trailing-whitespace, &.cm-property, &.cm-variable-2:first-child, &.cm-variable-3:first-child, &.cm-keyword:first-child {
            text-decoration: none;
            color: @editor-list-checked-color;
        }

        & > .cm-variable-2, & > .cm-variable-3, & > .cm-keyword {
            color: @editor-list-checked-color;
        }
    }

// Show blocks option
// ==================

    .CodeMirror-wrap pre {
        padding-left: 20px;
    }

    body.show-blocks pre.not-blank {
        border-left: @editor-block-margin-size solid @editor-block-margin-color;
    }

// Spellchecker
// ============

    span.cm-m-markdown.cm-spell-error {
        display: inline-block;
        position:relative;
        background: data-uri("image/svg+xml;charset=UTF-8", "./svg/spellcheck-underline.svg") left bottom repeat-x;
    }

    span.cm-m-markdown.cm-spell-error {
        &.cm-string, &.cm-link, &.cm-formatting, &.cm-tag, &.cm-hr, &.cm-comment {
            background: none;
        }
    }
